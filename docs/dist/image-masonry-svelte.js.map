{"version":3,"file":"image-masonry-svelte.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/common/dijkstra.js","../../src/common/utils.js","../../src/common/justified-layout.js","../../node_modules/element-resize-event/index.js","../../src/svelte/ImageMasonry.svelte","../src/images.js","../src/svelte/App.svelte","../src/svelte/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","/******************************************************************************\r\n * Created 2008-08-19.\r\n *\r\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\r\n *\r\n * Copyright (C) 2008\r\n *   Wyatt Baldwin <self@wyattbaldwin.com>\r\n *   All rights reserved\r\n *\r\n * Licensed under the MIT license.\r\n *\r\n *   http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *****************************************************************************/\r\nexport const dijkstra = {\r\n  single_source_shortest_paths: function(graph, s, d) {\r\n    // Predecessor map for each node that has been encountered.\r\n    // node ID => predecessor node ID\r\n    var predecessors = {};\r\n\r\n    // Costs of shortest paths from s to all nodes encountered.\r\n    // node ID => cost\r\n    var costs = {};\r\n    costs[s] = 0;\r\n\r\n    // Costs of shortest paths from s to all nodes encountered; differs from\r\n    // `costs` in that it provides easy access to the node that currently has\r\n    // the known shortest path from s.\r\n    // XXX: Do we actually need both `costs` and `open`?\r\n    var open = new BinaryHeap(function (x) { return x.cost; });\r\n    open.push({value: s, cost: 0});\r\n\r\n    var closest,\r\n        u,\r\n        cost_of_s_to_u,\r\n        adjacent_nodes,\r\n        cost_of_e,\r\n        cost_of_s_to_u_plus_cost_of_e,\r\n        cost_of_s_to_v,\r\n        first_visit;\r\n    while (open.size()) {\r\n      // In the nodes remaining in graph that have a known cost from s,\r\n      // find the node, u, that currently has the shortest path from s.\r\n      closest = open.pop();\r\n      u = closest.value;\r\n      cost_of_s_to_u = closest.cost;\r\n\r\n      // Get nodes adjacent to u...\r\n      adjacent_nodes = graph(u) || {};\r\n\r\n      // ...and explore the edges that connect u to those nodes, updating\r\n      // the cost of the shortest paths to any or all of those nodes as\r\n      // necessary. v is the node across the current edge from u.\r\n      for (var v in adjacent_nodes) {\r\n        // Get the cost of the edge running from u to v.\r\n        cost_of_e = adjacent_nodes[v];\r\n\r\n        // Cost of s to u plus the cost of u to v across e--this is *a*\r\n        // cost from s to v that may or may not be less than the current\r\n        // known cost to v.\r\n        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\r\n\r\n        // If we haven't visited v yet OR if the current known cost from s to\r\n        // v is greater than the new cost we just found (cost of s to u plus\r\n        // cost of u to v across e), update v's cost in the cost list and\r\n        // update v's predecessor in the predecessor list (it's now u).\r\n        cost_of_s_to_v = costs[v];\r\n        first_visit = (typeof costs[v] === 'undefined');\r\n        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\r\n          costs[v] = cost_of_s_to_u_plus_cost_of_e;\r\n          open.push({value: v, cost: cost_of_s_to_u_plus_cost_of_e});\r\n          predecessors[v] = u;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (typeof costs[d] === 'undefined') {\r\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\r\n      throw new Error(msg);\r\n    }\r\n\r\n    return predecessors;\r\n  },\r\n\r\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\r\n    var nodes = [];\r\n    var u = d;\r\n    var predecessor;\r\n    while (u) {\r\n      nodes.push(u);\r\n      predecessor = predecessors[u];\r\n      u = predecessors[u];\r\n    }\r\n    nodes.reverse();\r\n    return nodes;\r\n  },\r\n\r\n  find_path: function(graph, s, d) {\r\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\r\n    return dijkstra.extract_shortest_path_from_predecessor_list(\r\n      predecessors, d);\r\n  },\r\n\r\n  // test: function() {\r\n  //   // A B C\r\n  //   // D E F\r\n  //   // G H I\r\n  //   graph = function (key) {\r\n  //     switch (key) {\r\n  //       case 'a': return {b: 10, d: 1};\r\n  //       case 'b': return {a: 1, c: 1, e: 1};\r\n  //       case 'c': return {b: 1, f: 1};\r\n  //       case 'd': return {a: 1, e: 1, g: 1};\r\n  //       case 'e': return {b: 1, d: 1, f: 1, h: 1};\r\n  //       case 'f': return {c: 1, e: 1, i: 1};\r\n  //       case 'g': return {d: 1, h: 1};\r\n  //       case 'h': return {e: 1, g: 1, i: 1};\r\n  //       case 'i': return {f: 1, h: 1};\r\n  //     }\r\n  //   };\r\n  //   var path = dijkstra.find_path(graph, 'a', 'i');\r\n  //   if (path.join() !== ['a', 'd', 'e', 'f', 'i'].join()) {\r\n  //     throw new Error('Path finding error!');\r\n  //   }\r\n  // }\r\n};\r\n\r\nfunction BinaryHeap(scoreFunction){\r\n  this.content = [];\r\n  this.scoreFunction = scoreFunction;\r\n}\r\n\r\nBinaryHeap.prototype = {\r\n  push: function(element) {\r\n    // Add the new element to the end of the array.\r\n    this.content.push(element);\r\n    // Allow it to bubble up.\r\n    this.bubbleUp(this.content.length - 1);\r\n  },\r\n\r\n  pop: function() {\r\n    // Store the first element so we can return it later.\r\n    var result = this.content[0];\r\n    // Get the element at the end of the array.\r\n    var end = this.content.pop();\r\n    // If there are any elements left, put the end element at the\r\n    // start, and let it sink down.\r\n    if (this.content.length > 0) {\r\n      this.content[0] = end;\r\n      this.sinkDown(0);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  remove: function(node) {\r\n    var len = this.content.length;\r\n    // To remove a value, we must search through the array to find\r\n    // it.\r\n    for (var i = 0; i < len; i++) {\r\n      if (this.content[i] === node) {\r\n        // When it is found, the process seen in 'pop' is repeated\r\n        // to fill up the hole.\r\n        var end = this.content.pop();\r\n        if (i !== len - 1) {\r\n          this.content[i] = end;\r\n          if (this.scoreFunction(end) < this.scoreFunction(node))\r\n            this.bubbleUp(i);\r\n          else\r\n            this.sinkDown(i);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    throw new Error(\"Node not found.\");\r\n  },\r\n\r\n  size: function() {\r\n    return this.content.length;\r\n  },\r\n\r\n  bubbleUp: function(n) {\r\n    // Fetch the element that has to be moved.\r\n    var element = this.content[n];\r\n    // When at 0, an element can not go up any further.\r\n    while (n > 0) {\r\n      // Compute the parent element's index, and fetch it.\r\n      var parentN = Math.floor((n + 1) / 2) - 1,\r\n          parent = this.content[parentN];\r\n      // Swap the elements if the parent is greater.\r\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n        this.content[parentN] = element;\r\n        this.content[n] = parent;\r\n        // Update 'n' to continue at the new position.\r\n        n = parentN;\r\n      }\r\n      // Found a parent that is less, no need to move it further.\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  sinkDown: function(n) {\r\n    // Look up the target element and its score.\r\n    var length = this.content.length,\r\n        element = this.content[n],\r\n        elemScore = this.scoreFunction(element);\r\n\r\n    while(true) {\r\n      // Compute the indices of the child elements.\r\n      var child2N = (n + 1) * 2, child1N = child2N - 1;\r\n      // This is used to store the new position of the element,\r\n      // if any.\r\n      var swap = null;\r\n      // If the first child exists (is inside the array)...\r\n      if (child1N < length) {\r\n        // Look it up and compute its score.\r\n        var child1 = this.content[child1N],\r\n            child1Score = this.scoreFunction(child1);\r\n        // If the score is less than our element's, we need to swap.\r\n        if (child1Score < elemScore)\r\n          swap = child1N;\r\n      }\r\n      // Do the same checks for the other child.\r\n      if (child2N < length) {\r\n        var child2 = this.content[child2N],\r\n            child2Score = this.scoreFunction(child2);\r\n        if (child2Score < (swap === null ? elemScore : child1Score))\r\n          swap = child2N;\r\n      }\r\n\r\n      // If the element needs to be moved, swap it, and continue.\r\n      if (swap != null) {\r\n        this.content[n] = this.content[swap];\r\n        this.content[swap] = element;\r\n        n = swap;\r\n      }\r\n      // Otherwise, we are done.\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n};\r\n","export function ratio(width, height) {\r\n  return height / width;\r\n}\r\n\r\nexport function scaleHeight(width, ratio) {\r\n  return width * ratio;\r\n}\r\n\r\nexport function scaleWidth(height, ratio) {\r\n  return height / ratio;\r\n}\r\n","import { dijkstra } from './dijkstra';\r\nimport { ratio, scaleWidth, scaleHeight } from './utils';\r\n\r\nfunction getRowHeight(row, containerWidth, targetHeight) {\r\n  const rowWidth = row.reduce((accumulator, { scaledWidth }) => accumulator + scaledWidth, 0);\r\n  return scaleHeight(containerWidth, ratio(rowWidth, targetHeight));\r\n}\r\n\r\nfunction cost(images, start, end, containerWidth, targetHeight) {\r\n  const row = images.slice(start, end);\r\n  const rowHeight = getRowHeight(row, containerWidth, targetHeight);\r\n  return Math.pow(Math.abs(rowHeight - targetHeight), 2);\r\n}\r\n\r\nexport default function(imgs, containerWidth, targetHeight, seekLimit = 8, byRow = false) {\r\n\r\n  // clone the images, and set ratio and initial scaled width / height\r\n  const images = imgs.map(image => {\r\n    const r = ratio(image.width, image.height);\r\n    return {\r\n      ...image,\r\n      ratio: r,\r\n      scaledWidth: scaleWidth(targetHeight, r),\r\n      scaledHeight: targetHeight,\r\n      scaledWidthPc: 0\r\n    }\r\n  });\r\n\r\n  const graph = start => {\r\n    const results = {};\r\n    start = +start;\r\n    results[start] = 0;\r\n    for (let i = start + 1; i < images.length + 1; ++i) {\r\n      if (i - start > seekLimit) {\r\n        break;\r\n      }\r\n      results['' + i] = cost(images, start, i, containerWidth, targetHeight);\r\n    }\r\n    return results;\r\n  }\r\n\r\n  const path = dijkstra.find_path(graph, '0', images.length);\r\n\r\n  const rows = [];\r\n  const scaledImages = [];\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (path[i + 1]) {\r\n      const row = images.slice(+path[i], +path[i + 1]);\r\n      // scale row\r\n      const rowHeight = getRowHeight(row, containerWidth, targetHeight);\r\n      row.forEach(image => {\r\n        image.scaledWidth = scaleWidth(rowHeight, image.ratio)\r\n        image.scaledHeight = rowHeight;\r\n        image.scaledWidthPc = (image.scaledWidth / containerWidth) * 100;\r\n        scaledImages.push(image);\r\n      });\r\n      rows.push(row);\r\n    }\r\n  }\r\n\r\n  if (byRow) {\r\n    return rows;\r\n  } else {\r\n    return scaledImages;\r\n  }\r\n}\r\n","function resizeListener(e) {\r\n  var win = e.target || e.srcElement\r\n  if (win.__resizeRAF__) {\r\n    cancelAnimationFrame(win.__resizeRAF__)\r\n  }\r\n  win.__resizeRAF__ = requestAnimationFrame(function () {\r\n    var trigger = win.__resizeTrigger__\r\n    var listeners = trigger &&  trigger.__resizeListeners__\r\n    if (listeners) {\r\n      listeners.forEach(function (fn) {\r\n        fn.call(trigger, e)\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nvar exports = function exports(element, fn) {\r\n  var window = this\r\n  var document = window.document\r\n  var isIE\r\n\r\n  var attachEvent = document.attachEvent\r\n  if (typeof navigator !== 'undefined') {\r\n    isIE = navigator.userAgent.match(/Trident/) ||\r\n      navigator.userAgent.match(/Edge/)\r\n  }\r\n\r\n  function objectLoad() {\r\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\r\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\r\n  }\r\n\r\n  if (!element.__resizeListeners__) {\r\n    element.__resizeListeners__ = []\r\n    if (attachEvent) {\r\n      element.__resizeTrigger__ = element\r\n      element.attachEvent('onresize', resizeListener)\r\n    } else {\r\n      if (getComputedStyle(element).position === 'static') {\r\n        element.style.position = 'relative'\r\n      }\r\n      var obj = (element.__resizeTrigger__ = document.createElement('object'))\r\n      obj.setAttribute(\r\n        'style',\r\n        'position: absolute; top: 0; left: 0; height: 100%; width: 100%; pointer-events: none; z-index: -1; opacity: 0;'\r\n      )\r\n      obj.setAttribute('class', 'resize-sensor')\r\n\r\n      // prevent <object> from stealing keyboard focus\r\n      obj.setAttribute('tabindex', '-1');\r\n\r\n      obj.__resizeElement__ = element\r\n      obj.onload = objectLoad\r\n      obj.type = 'text/html'\r\n      if (isIE) {\r\n        element.appendChild(obj)\r\n      }\r\n      obj.data = 'about:blank'\r\n      if (!isIE) {\r\n        element.appendChild(obj)\r\n      }\r\n    }\r\n  }\r\n  element.__resizeListeners__.push(fn)\r\n}\r\n\r\nmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\r\n\r\nmodule.exports.unbind = function (element, fn) {\r\n  var attachEvent = document.attachEvent\r\n  var listeners = element.__resizeListeners__ || []\r\n  if (fn) {\r\n    var index = listeners.indexOf(fn)\r\n    if (index !== -1) {\r\n      listeners.splice(index, 1)\r\n    }\r\n  } else {\r\n    listeners = element.__resizeListeners__ = []\r\n  }\r\n  if (!listeners.length) {\r\n    if (attachEvent) {\r\n      element.detachEvent('onresize', resizeListener)\r\n    } else if (element.__resizeTrigger__) {\r\n      var contentDocument = element.__resizeTrigger__.contentDocument;\r\n      var defaultView = contentDocument && contentDocument.defaultView;\r\n      if (defaultView) {\r\n        defaultView.removeEventListener('resize', resizeListener);\r\n        delete defaultView.__resizeTrigger__;\r\n      }\r\n      element.__resizeTrigger__ = !element.removeChild(\r\n        element.__resizeTrigger__\r\n      )\r\n    }\r\n    delete element.__resizeListeners__\r\n  }\r\n}\r\n","<script>\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import createLayout from '../common/justified-layout';\r\n  import elementResizeEvent, { unbind } from 'element-resize-event';\r\n\r\n  function makeStyle({ scaledWidthPc, scaledHeight }) {\r\n    return `width:${scaledWidthPc}%; height:${scaledHeight}px`;\r\n  }\r\n\r\n  function onClick(index) {\r\n    dispatch('image-click', images[index]);\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // props\r\n  export let images = [];\r\n  export let targetRowHeight = 200;\r\n\r\n  // state\r\n  let element;\r\n  let scaledImages = [];\r\n  let width;\r\n\r\n  // reactive statement\r\n  $: if (width) {\r\n    scaledImages = createLayout(images, width, targetRowHeight);\r\n  }\r\n\r\n  onMount(() => {\r\n    width = element.getBoundingClientRect().width;\r\n\r\n    elementResizeEvent(element, () => {\r\n      if (Math.round(width) !== Math.round(element.getBoundingClientRect().width)) {\r\n        width = element.getBoundingClientRect().width;\r\n      }\r\n    });\r\n\r\n    return () => unbind(element);\r\n  });\r\n</script>\r\n\r\n<div class=\"image-masonry\" bind:this={element}>\r\n  {#each scaledImages as image, index}\r\n    <div class=\"image-masonry-item\" style={makeStyle(image)} on:click={()=>onClick(index)}>\r\n      <img src={image.src} alt={image.alt} />\r\n    </div>\r\n  {/each}\r\n</div>\r\n","export default [\r\n  {\r\n    src: \"https://source.unsplash.com/V6TWE6h8gyg/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/dtaPArYUDg4/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/R_kik2MoltU/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/8LPgWfHgcMg/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/mC_puQe4V3g/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/_LuLiJc1cdo/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/v7daTKlZzaw/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/s7qZayMy6Go/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/rB-4G58XFt0/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/fg6g2u5oklo/1000x300\",\r\n    width: 1000,\r\n    height: 400\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/eVwzKfnEGDg/800x600\",\r\n    width:800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/F_eLtGyrlNY/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/9270-pFGVTU/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/R4y_E5ZQDPg/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/-QTa5xYxDCs/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Sfs_64L9UHE/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/pR166OP_l6g/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/hlvtJ4JkVfc/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/AUYr7ptqSRQ/800x400\",\r\n    width: 800,\r\n    height: 400\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/E7PlRr9ZfoM/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/GhlotfzelR4/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Xvlc79bu9MA/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/txRO7-0I8wU/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/e2uTOpgW5Ec/1000x300\",\r\n    width: 1000,\r\n    height: 300\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/5BsNkTMbZZ0/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/_31y-mxvRWI/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/VrrZAVkzfWE/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  }\r\n];\r\n","<script>\r\n  import ImageMasonry from '../../../src/svelte/ImageMasonry.svelte';\r\n  import sampleImages from '../images';\r\n\r\n  function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n  function onClick(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  let images = sampleImages;\r\n  let targetRowHeight = 200;\r\n\r\n  function onChangeImages() {\r\n    const newArray = [...sampleImages];\r\n    shuffleArray(newArray);\r\n    images = newArray;\r\n  }\r\n\r\n  function onChangeRowHeight() {\r\n    targetRowHeight = targetRowHeight + 20\r\n  }\r\n\r\n</script>\r\n\r\n<button type=\"button\" on:click={onChangeImages}>Change images</button> <button type=\"button\" on:click={onChangeRowHeight}>Change row height</button>\r\n<ImageMasonry images={images} targetRowHeight={targetRowHeight} on:image-click={onClick} />\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n  target: document.querySelector('#app')\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","SvelteElement","transition_in","block","local","delete","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","key","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","ret","hydrate","l","Array","from","childNodes","children","c","intro","HTMLElement","[object Object]","super","this","attachShadow","mode","slotted","_oldValue","newValue","$destroy","index","indexOf","splice","SvelteComponent","dijkstra","single_source_shortest_paths","graph","s","predecessors","costs","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","BinaryHeap","x","cost","size","v","msg","join","extract_shortest_path_from_predecessor_list","nodes","reverse","find_path","scoreFunction","content","ratio","width","height","scaleWidth","getRowHeight","row","containerWidth","targetHeight","scaleHeight","reduce","accumulator","scaledWidth","images","start","end","rowHeight","Math","pow","abs","resizeListener","win","srcElement","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","trigger","__resizeTrigger__","listeners","__resizeListeners__","prototype","bubbleUp","result","sinkDown","remove","len","n","parentN","floor","parent","elemScore","child2N","child1N","swap","child1","child1Score","child2","exports","isIE","attachEvent","navigator","userAgent","match","getComputedStyle","position","style","obj","__resizeElement__","onload","contentDocument","defaultView","window","bind","detachEvent","image","src","alt","makeStyle","click_handler","scaledImages","iterations","scaledWidthPc","scaledHeight","onClick","dispatch","targetRowHeight","getBoundingClientRect","elementResizeEvent","round","unbind","imgs","seekLimit","byRow","r","path","results","rows","createLayout","onChangeImages","onChangeRowHeight","o","console","log","sampleImages","newArray","array","j","random","shuffleArray","querySelector"],"mappings":"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"}