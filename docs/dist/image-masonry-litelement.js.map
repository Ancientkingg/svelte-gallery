{"version":3,"file":"image-masonry-litelement.js","sources":["../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/modify-template.js","../../node_modules/lit-element/lit-element.js","../../src/common/dijkstra.js","../../src/common/utils.js","../../src/common/justified-layout.js","../../node_modules/element-resize-event/index.js","../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lib/render.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/shady-render.js","../../node_modules/lit-element/lib/updating-element.js","../../node_modules/lit-element/lib/css-tag.js","../../src/litelement/image-masonry.js","../src/images.js","../src/litelement/index.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/******************************************************************************\r\n * Created 2008-08-19.\r\n *\r\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\r\n *\r\n * Copyright (C) 2008\r\n *   Wyatt Baldwin <self@wyattbaldwin.com>\r\n *   All rights reserved\r\n *\r\n * Licensed under the MIT license.\r\n *\r\n *   http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *****************************************************************************/\r\nexport const dijkstra = {\r\n  single_source_shortest_paths: function(graph, s, d) {\r\n    // Predecessor map for each node that has been encountered.\r\n    // node ID => predecessor node ID\r\n    var predecessors = {};\r\n\r\n    // Costs of shortest paths from s to all nodes encountered.\r\n    // node ID => cost\r\n    var costs = {};\r\n    costs[s] = 0;\r\n\r\n    // Costs of shortest paths from s to all nodes encountered; differs from\r\n    // `costs` in that it provides easy access to the node that currently has\r\n    // the known shortest path from s.\r\n    // XXX: Do we actually need both `costs` and `open`?\r\n    var open = new BinaryHeap(function (x) { return x.cost; });\r\n    open.push({value: s, cost: 0});\r\n\r\n    var closest,\r\n        u,\r\n        cost_of_s_to_u,\r\n        adjacent_nodes,\r\n        cost_of_e,\r\n        cost_of_s_to_u_plus_cost_of_e,\r\n        cost_of_s_to_v,\r\n        first_visit;\r\n    while (open.size()) {\r\n      // In the nodes remaining in graph that have a known cost from s,\r\n      // find the node, u, that currently has the shortest path from s.\r\n      closest = open.pop();\r\n      u = closest.value;\r\n      cost_of_s_to_u = closest.cost;\r\n\r\n      // Get nodes adjacent to u...\r\n      adjacent_nodes = graph(u) || {};\r\n\r\n      // ...and explore the edges that connect u to those nodes, updating\r\n      // the cost of the shortest paths to any or all of those nodes as\r\n      // necessary. v is the node across the current edge from u.\r\n      for (var v in adjacent_nodes) {\r\n        // Get the cost of the edge running from u to v.\r\n        cost_of_e = adjacent_nodes[v];\r\n\r\n        // Cost of s to u plus the cost of u to v across e--this is *a*\r\n        // cost from s to v that may or may not be less than the current\r\n        // known cost to v.\r\n        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\r\n\r\n        // If we haven't visited v yet OR if the current known cost from s to\r\n        // v is greater than the new cost we just found (cost of s to u plus\r\n        // cost of u to v across e), update v's cost in the cost list and\r\n        // update v's predecessor in the predecessor list (it's now u).\r\n        cost_of_s_to_v = costs[v];\r\n        first_visit = (typeof costs[v] === 'undefined');\r\n        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\r\n          costs[v] = cost_of_s_to_u_plus_cost_of_e;\r\n          open.push({value: v, cost: cost_of_s_to_u_plus_cost_of_e});\r\n          predecessors[v] = u;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (typeof costs[d] === 'undefined') {\r\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\r\n      throw new Error(msg);\r\n    }\r\n\r\n    return predecessors;\r\n  },\r\n\r\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\r\n    var nodes = [];\r\n    var u = d;\r\n    var predecessor;\r\n    while (u) {\r\n      nodes.push(u);\r\n      predecessor = predecessors[u];\r\n      u = predecessors[u];\r\n    }\r\n    nodes.reverse();\r\n    return nodes;\r\n  },\r\n\r\n  find_path: function(graph, s, d) {\r\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\r\n    return dijkstra.extract_shortest_path_from_predecessor_list(\r\n      predecessors, d);\r\n  },\r\n\r\n  // test: function() {\r\n  //   // A B C\r\n  //   // D E F\r\n  //   // G H I\r\n  //   graph = function (key) {\r\n  //     switch (key) {\r\n  //       case 'a': return {b: 10, d: 1};\r\n  //       case 'b': return {a: 1, c: 1, e: 1};\r\n  //       case 'c': return {b: 1, f: 1};\r\n  //       case 'd': return {a: 1, e: 1, g: 1};\r\n  //       case 'e': return {b: 1, d: 1, f: 1, h: 1};\r\n  //       case 'f': return {c: 1, e: 1, i: 1};\r\n  //       case 'g': return {d: 1, h: 1};\r\n  //       case 'h': return {e: 1, g: 1, i: 1};\r\n  //       case 'i': return {f: 1, h: 1};\r\n  //     }\r\n  //   };\r\n  //   var path = dijkstra.find_path(graph, 'a', 'i');\r\n  //   if (path.join() !== ['a', 'd', 'e', 'f', 'i'].join()) {\r\n  //     throw new Error('Path finding error!');\r\n  //   }\r\n  // }\r\n};\r\n\r\nfunction BinaryHeap(scoreFunction){\r\n  this.content = [];\r\n  this.scoreFunction = scoreFunction;\r\n}\r\n\r\nBinaryHeap.prototype = {\r\n  push: function(element) {\r\n    // Add the new element to the end of the array.\r\n    this.content.push(element);\r\n    // Allow it to bubble up.\r\n    this.bubbleUp(this.content.length - 1);\r\n  },\r\n\r\n  pop: function() {\r\n    // Store the first element so we can return it later.\r\n    var result = this.content[0];\r\n    // Get the element at the end of the array.\r\n    var end = this.content.pop();\r\n    // If there are any elements left, put the end element at the\r\n    // start, and let it sink down.\r\n    if (this.content.length > 0) {\r\n      this.content[0] = end;\r\n      this.sinkDown(0);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  remove: function(node) {\r\n    var len = this.content.length;\r\n    // To remove a value, we must search through the array to find\r\n    // it.\r\n    for (var i = 0; i < len; i++) {\r\n      if (this.content[i] === node) {\r\n        // When it is found, the process seen in 'pop' is repeated\r\n        // to fill up the hole.\r\n        var end = this.content.pop();\r\n        if (i !== len - 1) {\r\n          this.content[i] = end;\r\n          if (this.scoreFunction(end) < this.scoreFunction(node))\r\n            this.bubbleUp(i);\r\n          else\r\n            this.sinkDown(i);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    throw new Error(\"Node not found.\");\r\n  },\r\n\r\n  size: function() {\r\n    return this.content.length;\r\n  },\r\n\r\n  bubbleUp: function(n) {\r\n    // Fetch the element that has to be moved.\r\n    var element = this.content[n];\r\n    // When at 0, an element can not go up any further.\r\n    while (n > 0) {\r\n      // Compute the parent element's index, and fetch it.\r\n      var parentN = Math.floor((n + 1) / 2) - 1,\r\n          parent = this.content[parentN];\r\n      // Swap the elements if the parent is greater.\r\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n        this.content[parentN] = element;\r\n        this.content[n] = parent;\r\n        // Update 'n' to continue at the new position.\r\n        n = parentN;\r\n      }\r\n      // Found a parent that is less, no need to move it further.\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  sinkDown: function(n) {\r\n    // Look up the target element and its score.\r\n    var length = this.content.length,\r\n        element = this.content[n],\r\n        elemScore = this.scoreFunction(element);\r\n\r\n    while(true) {\r\n      // Compute the indices of the child elements.\r\n      var child2N = (n + 1) * 2, child1N = child2N - 1;\r\n      // This is used to store the new position of the element,\r\n      // if any.\r\n      var swap = null;\r\n      // If the first child exists (is inside the array)...\r\n      if (child1N < length) {\r\n        // Look it up and compute its score.\r\n        var child1 = this.content[child1N],\r\n            child1Score = this.scoreFunction(child1);\r\n        // If the score is less than our element's, we need to swap.\r\n        if (child1Score < elemScore)\r\n          swap = child1N;\r\n      }\r\n      // Do the same checks for the other child.\r\n      if (child2N < length) {\r\n        var child2 = this.content[child2N],\r\n            child2Score = this.scoreFunction(child2);\r\n        if (child2Score < (swap === null ? elemScore : child1Score))\r\n          swap = child2N;\r\n      }\r\n\r\n      // If the element needs to be moved, swap it, and continue.\r\n      if (swap != null) {\r\n        this.content[n] = this.content[swap];\r\n        this.content[swap] = element;\r\n        n = swap;\r\n      }\r\n      // Otherwise, we are done.\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n};\r\n","export function ratio(width, height) {\r\n  return height / width;\r\n}\r\n\r\nexport function scaleHeight(width, ratio) {\r\n  return width * ratio;\r\n}\r\n\r\nexport function scaleWidth(height, ratio) {\r\n  return height / ratio;\r\n}\r\n","import { dijkstra } from './dijkstra';\r\nimport { ratio, scaleWidth, scaleHeight } from './utils';\r\n\r\nfunction getRowHeight(row, containerWidth, targetHeight) {\r\n  const rowWidth = row.reduce((accumulator, { scaledWidth }) => accumulator + scaledWidth, 0);\r\n  return scaleHeight(containerWidth, ratio(rowWidth, targetHeight));\r\n}\r\n\r\nfunction cost(images, start, end, containerWidth, targetHeight) {\r\n  const row = images.slice(start, end);\r\n  const rowHeight = getRowHeight(row, containerWidth, targetHeight);\r\n  return Math.pow(Math.abs(rowHeight - targetHeight), 2);\r\n}\r\n\r\nexport default function(imgs, containerWidth, targetHeight, seekLimit = 8, byRow = false) {\r\n\r\n  // clone the images, and set ratio and initial scaled width / height\r\n  const images = imgs.map(image => {\r\n    const r = ratio(image.width, image.height);\r\n    return {\r\n      ...image,\r\n      ratio: r,\r\n      scaledWidth: scaleWidth(targetHeight, r),\r\n      scaledHeight: targetHeight,\r\n      scaledWidthPc: 0\r\n    }\r\n  });\r\n\r\n  const graph = start => {\r\n    const results = {};\r\n    start = +start;\r\n    results[start] = 0;\r\n    for (let i = start + 1; i < images.length + 1; ++i) {\r\n      if (i - start > seekLimit) {\r\n        break;\r\n      }\r\n      results['' + i] = cost(images, start, i, containerWidth, targetHeight);\r\n    }\r\n    return results;\r\n  }\r\n\r\n  const path = dijkstra.find_path(graph, '0', images.length);\r\n\r\n  const rows = [];\r\n  const scaledImages = [];\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (path[i + 1]) {\r\n      const row = images.slice(+path[i], +path[i + 1]);\r\n      // scale row\r\n      const rowHeight = getRowHeight(row, containerWidth, targetHeight);\r\n      row.forEach(image => {\r\n        image.scaledWidth = scaleWidth(rowHeight, image.ratio)\r\n        image.scaledHeight = rowHeight;\r\n        image.scaledWidthPc = (image.scaledWidth / containerWidth) * 100;\r\n        scaledImages.push(image);\r\n      });\r\n      rows.push(row);\r\n    }\r\n  }\r\n\r\n  if (byRow) {\r\n    return rows;\r\n  } else {\r\n    return scaledImages;\r\n  }\r\n}\r\n","function resizeListener(e) {\r\n  var win = e.target || e.srcElement\r\n  if (win.__resizeRAF__) {\r\n    cancelAnimationFrame(win.__resizeRAF__)\r\n  }\r\n  win.__resizeRAF__ = requestAnimationFrame(function () {\r\n    var trigger = win.__resizeTrigger__\r\n    var listeners = trigger &&  trigger.__resizeListeners__\r\n    if (listeners) {\r\n      listeners.forEach(function (fn) {\r\n        fn.call(trigger, e)\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nvar exports = function exports(element, fn) {\r\n  var window = this\r\n  var document = window.document\r\n  var isIE\r\n\r\n  var attachEvent = document.attachEvent\r\n  if (typeof navigator !== 'undefined') {\r\n    isIE = navigator.userAgent.match(/Trident/) ||\r\n      navigator.userAgent.match(/Edge/)\r\n  }\r\n\r\n  function objectLoad() {\r\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\r\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\r\n  }\r\n\r\n  if (!element.__resizeListeners__) {\r\n    element.__resizeListeners__ = []\r\n    if (attachEvent) {\r\n      element.__resizeTrigger__ = element\r\n      element.attachEvent('onresize', resizeListener)\r\n    } else {\r\n      if (getComputedStyle(element).position === 'static') {\r\n        element.style.position = 'relative'\r\n      }\r\n      var obj = (element.__resizeTrigger__ = document.createElement('object'))\r\n      obj.setAttribute(\r\n        'style',\r\n        'position: absolute; top: 0; left: 0; height: 100%; width: 100%; pointer-events: none; z-index: -1; opacity: 0;'\r\n      )\r\n      obj.setAttribute('class', 'resize-sensor')\r\n\r\n      // prevent <object> from stealing keyboard focus\r\n      obj.setAttribute('tabindex', '-1');\r\n\r\n      obj.__resizeElement__ = element\r\n      obj.onload = objectLoad\r\n      obj.type = 'text/html'\r\n      if (isIE) {\r\n        element.appendChild(obj)\r\n      }\r\n      obj.data = 'about:blank'\r\n      if (!isIE) {\r\n        element.appendChild(obj)\r\n      }\r\n    }\r\n  }\r\n  element.__resizeListeners__.push(fn)\r\n}\r\n\r\nmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\r\n\r\nmodule.exports.unbind = function (element, fn) {\r\n  var attachEvent = document.attachEvent\r\n  var listeners = element.__resizeListeners__ || []\r\n  if (fn) {\r\n    var index = listeners.indexOf(fn)\r\n    if (index !== -1) {\r\n      listeners.splice(index, 1)\r\n    }\r\n  } else {\r\n    listeners = element.__resizeListeners__ = []\r\n  }\r\n  if (!listeners.length) {\r\n    if (attachEvent) {\r\n      element.detachEvent('onresize', resizeListener)\r\n    } else if (element.__resizeTrigger__) {\r\n      var contentDocument = element.__resizeTrigger__.contentDocument;\r\n      var defaultView = contentDocument && contentDocument.defaultView;\r\n      if (defaultView) {\r\n        defaultView.removeEventListener('resize', resizeListener);\r\n        delete defaultView.__resizeTrigger__;\r\n      }\r\n      element.__resizeTrigger__ = !element.removeChild(\r\n        element.__resizeTrigger__\r\n      )\r\n    }\r\n    delete element.__resizeListeners__\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","import { LitElement, html, css } from 'lit-element';\r\nimport createLayout from '../common/justified-layout';\r\nimport elementResizeEvent, { unbind } from 'element-resize-event';\r\n\r\nclass ImageMasonry extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      images: { type: Array },\r\n      scaledImages: { type: Array },\r\n      width: { type: Number },\r\n      targetRowHeight: { type: Number }\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.scaledImages = [];\r\n    this.width = 0;\r\n    this.targetRowHeight = 220;\r\n  }\r\n\r\n  static get styles() {\r\n    return css `\r\n      :host {\r\n        display: block;\r\n      }\r\n\r\n      .image-masonry {\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      }\r\n\r\n      .image-masonry-item {\r\n        box-sizing: border-box;\r\n        padding: 1px\r\n      }\r\n\r\n      .image-masonry-item img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    const process = () => {\r\n      this.width = this.getBoundingClientRect().width;\r\n      this.scaledImages = createLayout(this.images, this.width, this.targetRowHeight);\r\n    }\r\n    elementResizeEvent(this.shadowRoot.querySelector('.image-masonry'), () => {\r\n      if (Math.round(this.width) !== Math.round(this.getBoundingClientRect().width)) {\r\n        process();\r\n      }\r\n    });\r\n    process();\r\n  }\r\n\r\n  makeStyle({ scaledWidthPc, scaledHeight }) {\r\n    return `width:${scaledWidthPc}%; height:${scaledHeight}px;`\r\n  }\r\n\r\n  render() {\r\n    return html `\r\n      <div class=\"image-masonry\">\r\n        ${this.scaledImages.map(image => html`\r\n        <div class=\"image-masonry-item\"\r\n              style=\"${this.makeStyle(image)}\"\r\n              @click=\"onClick(index, $event)\">\r\n          <img src=\"${image.src}\" alt=\"${image.alt}\" />\r\n        </div>\r\n        `)}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('image-masonry', ImageMasonry);\r\n","export default [\r\n  {\r\n    src: \"https://source.unsplash.com/V6TWE6h8gyg/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/dtaPArYUDg4/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/R_kik2MoltU/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/8LPgWfHgcMg/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/mC_puQe4V3g/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/_LuLiJc1cdo/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/v7daTKlZzaw/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/s7qZayMy6Go/600x799\",\r\n    width: 600,\r\n    height: 799\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/rB-4G58XFt0/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/fg6g2u5oklo/1000x300\",\r\n    width: 1000,\r\n    height: 400\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/eVwzKfnEGDg/800x600\",\r\n    width:800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/F_eLtGyrlNY/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/9270-pFGVTU/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/R4y_E5ZQDPg/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/-QTa5xYxDCs/800x599\",\r\n    width: 800,\r\n    height: 599\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Sfs_64L9UHE/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/pR166OP_l6g/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/hlvtJ4JkVfc/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/AUYr7ptqSRQ/800x400\",\r\n    width: 800,\r\n    height: 400\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/E7PlRr9ZfoM/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/GhlotfzelR4/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Xvlc79bu9MA/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/txRO7-0I8wU/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/e2uTOpgW5Ec/1000x300\",\r\n    width: 1000,\r\n    height: 300\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/5BsNkTMbZZ0/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/_31y-mxvRWI/600x800\",\r\n    width: 600,\r\n    height: 800\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/VrrZAVkzfWE/800x600\",\r\n    width: 800,\r\n    height: 600\r\n  }\r\n];\r\n","import { LitElement, html } from 'lit-element';\r\nimport { ImageMasonry } from '../../../src/litelement/image-masonry';\r\nimport sampleImages from '../images';\r\n\r\nclass ImageMasonryExample extends LitElement {\r\n  render() {\r\n    return html `\r\n      <image-masonry .images=${sampleImages}></image-masonry>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('image-masonry-example', ImageMasonryExample);\r\n"],"names":["templateFactory","result","templateCache","templateCaches","get","type","stringsArray","WeakMap","keyString","Map","set","template","strings","key","join","marker","Template","getTemplateElement","removeNodesFromTemplate","nodesToRemove","element","content","parts","walker","document","createTreeWalker","walkerNodeFilter","partIndex","nextActiveIndexInTemplateParts","part","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","nextNode","node","currentNode","previousSibling","has","push","index","forEach","n","parentNode","removeChild","insertNodeIntoTemplate","refNode","appendChild","insertCount","walkerIndex","walkerNode","countNodes","insertBefore","arrayFlat","styles","i","length","value","Array","isArray","BinaryHeap","scoreFunction","ratio","width","height","scaleHeight","scaleWidth","getRowHeight","row","containerWidth","targetHeight","rowWidth","reduce","accumulator","scaledWidth","cost","images","start","end","slice","rowHeight","Math","pow","abs","imgs","seekLimit","byRow","map","image","r","scaledHeight","scaledWidthPc","path","dijkstra","find_path","results","rows","scaledImages","resizeListener","e","win","target","srcElement","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","trigger","__resizeTrigger__","listeners","__resizeListeners__","fn","call","directives","isDirective","o","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","removeNodes","container","nextSibling","noChange","nothing","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","constructor","stack","lastPartIndex","values","pop","nodeType","hasAttributes","attributes","count","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","tagName","data","indexOf","parent","lastIndex","insert","s","createMarker","match","createTextNode","str","suffix","isTemplatePartActive","createComment","TemplateInstance","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","isPrimitive","isIterable","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","text","v","t","setAttribute","committer","directive","NodePart","__pendingValue","appendInto","startNode","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","__options","getOptions","event","defaultTemplateProcessor","prefix","render","firstChild","Object","assign","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","Set","from","querySelectorAll","add","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","condensedStyle","style","textContent","querySelector","nativeShadow","removes","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","litRender","delete","styleElement","_a","JSCompiler_renameProperty","prop","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","String","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_saveInstanceProperties","_v","_applyInstanceProperties","connectedCallback","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","propName","shouldRequestUpdate","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","textFromCSSResult","css","acc","idx","flattenStyles","flat","LitElement","_styles","_getUniqueStyles","userStyles","flatStyles","styleSet","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","templateResult","single_source_shortest_paths","graph","d","predecessors","costs","open","x","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","msg","extract_shortest_path_from_predecessor_list","predecessor","nodes","reverse","bubbleUp","sinkDown","remove","len","parentN","floor","elemScore","child2N","child1N","swap","child1","child1Score","child2","child2Score","exports","objectLoad","contentDocument","defaultView","__resizeElement__","isIE","attachEvent","navigator","userAgent","getComputedStyle","position","obj","onload","bind","splice","detachEvent","ImageMasonry","targetRowHeight","process","getBoundingClientRect","createLayout","elementResizeEvent","shadowRoot","round","makeStyle","src","alt","define","sampleImages"],"mappings":"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"}